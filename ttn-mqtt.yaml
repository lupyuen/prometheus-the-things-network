# Settings for the MQTT Client. Currently only these three are supported
mqtt:

  # Change au1.cloud.thethings.network to our MQTT Public Address
  server: tcp://au1.cloud.thethings.network:1883

  # Change luppy-application@ttn to our MQTT Username
  user: luppy-application@ttn

  # Change YOUR_API_KEY to our MQTT Password
  password: YOUR_API_KEY

  # Topic path to subscribe to. "#" means All Topics.
  topic_path: "#"

  # MQTT QoS level
  qos: 0

  # Extract the device ID (eui-YOUR_DEVICE_EUI) from the topic path, which looks like...
  # v3/luppy-application@ttn/devices/eui-YOUR_DEVICE_EUI/up
  device_id_regex: "(.*/)?devices/(?P<deviceid>.*)/.*"

  # Optional: for TLS client certificates
  # ca_cert: certs/AmazonRootCA1.pem
  # client_cert: certs/xxxxx-certificate.pem.crt
  # client_key: certs/xxxxx-private.pem.key
  
  # Optional: Used to specify ClientID. The default is <hostname>-<pid>
  # client_id: somedevice

cache:

  # Timeout. Each received metric will be presented for this time if no update is send via MQTT.
  # Set the timeout to -1 to disable the deletion of metrics from the cache. The exporter presents the ingest timestamp
  # to prometheus.
  timeout: 24h

# List of valid metrics. Only metrics listed here will be exported
metrics:

  # Temperature Metric
  # Name of the metric in prometheus
  - prom_name: t
    # Name of the metric in a MQTT JSON message
    mqtt_name: "uplink_message.decoded_payload.t"
    # Prometheus help text for this metric
    help: "Temperature"
    # Prometheus type for this metric. Valid values are: "gauge" and "counter"
    type: gauge
    # Map of string to string for constant labels. This labels will be attached to every prometheus metric
    const_labels:
      sensor_type: t

  # Light Level Metric
  # Name of the metric in prometheus
  - prom_name: l
    # Name of the metric in a MQTT JSON message
    mqtt_name: "uplink_message.decoded_payload.l"
    # Prometheus help text for this metric
    help: "Light Level"
    # Prometheus type for this metric. Valid values are: "gauge" and "counter"
    type: gauge
    # Map of string to string for constant labels. This labels will be attached to every prometheus metric
    const_labels:
      sensor_type: l
